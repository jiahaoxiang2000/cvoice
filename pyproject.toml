[project]
name = "cvoice"
version = "1.1.0"
description = "A comprehensive voice recognition and synthesis tool that transforms video audio from one person's voice to another"
readme = "README.md"
authors = [
    { name = "isomo", email = "jiahaoxiang2000@gmail.com" }
]
requires-python = ">=3.11"
dependencies = [
    "moviepy>=1.0.3",
    "pydub>=0.25.1",
    "soundfile>=0.12.1",
    "librosa>=0.10.0",
    "openai-whisper>=20231117",
    "faster-whisper>=0.10.0",
    "TTS>=0.22.0",
    "ffmpeg-python>=0.2.0",
    "numpy>=1.24.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "pathlib>=1.0.1",
    "typing-extensions>=4.8.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "black>=23.0.0",
    "pre-commit>=3.5.0"
]

[project.scripts]
cvoice = "cvoice:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 88
target-version = "py311"
fix = true

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N", "UP", "S", "B", "A", "C4", "T20", "PL", "RUF"]
ignore = ["E501", "S101", "PLR0913", "PLR2004"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "PLR2004"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = ""

[dependency-groups]
dev = [
    "mypy>=1.17.0",
    "pytest>=8.4.1",
    "ruff>=0.12.3",
]
